generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                     String    @id @unique
  email                  String    @unique
  stripeCustomerId       String?   @unique @map("stripe_customer_id")
  stripeSubscriptionId   String?   @unique @map("stripe_subscription_id")
  stripePriceId          String?   @map("stripe_price_id")
  stripeCurrentPeriodEnd DateTime? @map("stripe_current_period_end")
  File                   File[]
  Message                Message[]
  Note                   Note[]
}

model File {
  id           String       @id @default(cuid())
  name         String
  uploadStatus UploadStatus @default(PENDING)
  url          String       @unique
  key          String       @unique
  userId       String?
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  User         User?        @relation(fields: [userId], references: [id])
  messages     Message[]
  notes        Note[]
}

model Message {
  id            String   @id @default(cuid())
  text          String
  isUserMessage Boolean
  userId        String?
  fileId        String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  File          File?    @relation(fields: [fileId], references: [id])
  User          User?    @relation(fields: [userId], references: [id])
}

model Note {
  id        String   @id @default(cuid())
  title     String   @default("Ny note")
  content   String
  aiResponse String?
  userId    String
  fileId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User     @relation(fields: [userId], references: [id])
  File      File     @relation(fields: [fileId], references: [id])
}
enum UploadStatus {
  PENDING
  PROCESSING
  FAILED
  SUCCESS
}